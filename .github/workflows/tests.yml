name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 nascar_fantasy_predictor/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. Line length is set to 88 (Black's default)
        flake8 nascar_fantasy_predictor/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with Black
      run: |
        black --check nascar_fantasy_predictor/ tests/

    - name: Import sorting check with isort
      run: |
        isort --check-only nascar_fantasy_predictor/ tests/

    - name: Type checking with mypy
      run: |
        mypy nascar_fantasy_predictor/ --ignore-missing-imports

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short

    - name: Test CLI commands
      run: |
        # Test that CLI commands are accessible
        nascar-predictor --help
        nascar-predictor collect --help
        nascar-predictor analyze --help
        nascar-predictor driver-stats --help
        nascar-predictor export --help