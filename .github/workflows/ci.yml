name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quick-check:
    name: Quick Check (Python 3.11)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-3.11-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-3.11-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short --durations=10

    - name: Verify CLI installation
      run: |
        nascar-predictor --help

  comprehensive-test:
    name: Comprehensive Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    # Only run comprehensive tests on main branch pushes or if PR is marked ready
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && !github.event.pull_request.draft)

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 nascar_fantasy_predictor/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Treat remaining issues as warnings
        flake8 nascar_fantasy_predictor/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with Black
      run: |
        black --check nascar_fantasy_predictor/ tests/

    - name: Import sorting check with isort
      run: |
        isort --check-only nascar_fantasy_predictor/ tests/

    - name: Type checking with mypy
      run: |
        mypy nascar_fantasy_predictor/ --ignore-missing-imports || true

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short

    - name: Test CLI functionality
      run: |
        # Test all CLI commands are accessible
        nascar-predictor --version
        nascar-predictor --help
        nascar-predictor collect --help
        nascar-predictor analyze --help  
        nascar-predictor driver-stats --help
        nascar-predictor export --help

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security linter
      run: |
        bandit -r nascar_fantasy_predictor/ -f json -o bandit-report.json || true
        bandit -r nascar_fantasy_predictor/ || true

    - name: Check dependencies for known security vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
        safety check || true